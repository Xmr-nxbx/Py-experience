###实例对象不同于类对象,若对创建的对象的属性赋值,则这个引用将变成实例对象;若对类对象数据操作,则创建的类对象的值都要改变
class C:
    x = 0
    def D(self):
        print('调用了方法')
a = C()
b = C()
c = C()
c.x += 10
print('单独对创建的对象数据操作:',a.x,b.x,c.x)
C.x += 100          ###对类对象进行操作(后面创建的对象的值同样会改变)
d = C()
print('类对象操作以后:',a.x,b.x,c.x)
print('新创建的对象的值:',d.x)

###如果创建新的属性的名字和类里的方法名相同.覆盖!!
d.D()
d.D = 1
try:
    d.D()
except:
    print(d.D)